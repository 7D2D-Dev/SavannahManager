<Window x:Class="_7dtd_svmanager_fix_mvvm.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:commonViews="clr-namespace:CommonStyleLib.Views;assembly=CommonStyleLib"
        xmlns:behaviors="clr-namespace:_7dtd_svmanager_fix_mvvm.Views.Behaviors"
        xmlns:app="clr-namespace:_7dtd_svmanager_fix_mvvm.LangResources"
        xmlns:viewModels="clr-namespace:_7dtd_svmanager_fix_mvvm.ViewModels"
        xmlns:converter="clr-namespace:_7dtd_svmanager_fix_mvvm.Views.Converter"
        xmlns:userControls="clr-namespace:_7dtd_svmanager_fix_mvvm.Views.UserControls"
        Icon="pack://application:,,,/CommonStyleLib;component/Resources/1.ico"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        d:DesignWidth="800" d:DesignHeight="600"
        Title="Savannah Manager" Height="{Binding Path=Height.Value,Mode=TwoWay}" Width="{Binding Path=Width.Value,Mode=TwoWay}" Top="{Binding Path=Top.Value,Mode=TwoWay}" Left="{Binding Path=Left.Value,Mode=TwoWay}" TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType" UseLayoutRounding="True">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Activated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Deactivated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding StateChanged}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <commonViews:InvokeDelegateCommandAction Command="{Binding KeyDown}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/ButtonIcon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{StaticResource ResourceKey=BackgroundGrid}">
        <Border Name="AroundBorder" BorderBrush="{Binding AroundBorderColor.Value}" Opacity="{Binding AroundBorderOpacity.Value}" BorderThickness="1" Grid.ColumnSpan="2" />

        <Grid Grid.ColumnSpan="2" Margin="{Binding MainWindowMargin}">

            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                        HorizontalAlignment="left"
                        VerticalAlignment="Top">
                <Image Source="{StaticResource Icon}" Width="15" Height="15" Stretch="Uniform" WindowChrome.IsHitTestVisibleInChrome="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <commonViews:InteractiveCommand Command="{Binding ImageMouseDown}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Label Content="Savannah Manager" Style="{StaticResource ResourceKey=StatTitle}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                <Button Name="MainWindowMinimumBt" Content="{Binding MainWindowMinimumBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowMinimumBtClick}" />
                <Button Name="MainMaximumBt" Content="{Binding MainWindowMaximumBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowMaximumBtClick}" />
                <Button Name="MainWindowCloseBt" Content="{Binding MainWindowCloseBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowCloseBtClick}" />
            </StackPanel>
            <StackPanel Margin="1,25,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Menu IsMainMenu="True" Name="Menu" Height="25" Padding="3" VerticalAlignment="Top">
                    <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_FileBT, Mode=OneWay}">
                        <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_ExitBT, Mode=OneWay}" Name="MenuExitBt" Command="{Binding MainWindowCloseBtClick}" />
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_ToolBT, Mode=OneWay}">
                        <MenuItem  Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_SettingsBT, Mode=OneWay}" Name="SettingsBt" Command="{Binding OpenSettingCommand}" />
                        <MenuItem  Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_FirstSettingBT, Mode=OneWay}" Name="FirstSettingsBt" Command="{Binding OpenFirstSettingsCommand}" />
                        <Separator Style="{StaticResource MLB_Separator}" />
                        <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_LanguageLabel, Mode=OneWay}">
                            <MenuItem Name="LangJapaneseBt" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_JapaneseLabel, Mode=OneWay}" Command="{Binding SetLangJapaneseCommand}" />
                            <MenuItem Name="LangEnglishBt" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_EnglishLabel, Mode=OneWay}" Command="{Binding SetLangEnglishCommand}" />
                        </MenuItem>
                        <Separator Style="{StaticResource MLB_Separator}" />
                        <MenuItem Header="Config Editor" Name="ConfigEditorBt" Command="{Binding OpenConfigEditorCommand}" />
                        <MenuItem Header="Xml Editor" Command="{Binding OpenXmlEditorCommand}" />
                        <MenuItem Header="Backup Editor" Name="BackupEditorBt" Command="{Binding OpenBackupEditorCommand}" IsEnabled="{Binding IsBeta.Value}" />
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_HelpBT, Mode=OneWay}" IsEnabled="True">
                        <MenuItem IsEnabled="True" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_UpdateCheckBT, Mode=OneWay}" Name="MenuCheckUpdateBt" Command="{Binding OpenCheckUpdateCommand}" />
                        <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_VersionBT, Mode=OneWay}" Name="MenuVersionInfo" Command="{Binding OpenVersionInfoCommand}" />
                    </MenuItem>
                </Menu>
            </StackPanel>

            <StackPanel Margin="10,55,10,0" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="25">
                <Button Width="23" Height="23" Name="StartBt" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="{Binding StartBtEnabled.Value}" Style="{StaticResource ResourceKey=StartBt}" Margin="0,0,0,0" Command="{Binding StartServerCommand}" />
                <Button Width="23" Height="23" Name="StopBt" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource ResourceKey=StopBt}" Margin="3,0,0,0" Command="{Binding StopServerCommand}" />
                <Border Width="1" Margin="3,2,0,0" BorderBrush="{StaticResource BorderWhiteColor}" BorderThickness="1" />
                <Button Name="TelnetBt" IsEnabled="{Binding TelnetBtIsEnabled.Value}" Style="{StaticResource TelnetBt}" Margin="4,0,0,0" Content="{Binding TelnetBtLabel.Value}" Command="{Binding ConnectTelnetCommand}" />
                <Border Width="1" Margin="3,2,0,0" BorderBrush="{StaticResource BorderWhiteColor}" Visibility="Visible" BorderThickness="1" />
                <Button IsEnabled="{Binding IsBeta.Value}" Style="{StaticResource AutoRestartButton}" Margin="4,0,0,0" Content="{Binding AutoRestartText.Value}" Command="{Binding AutoRestartCommand}" />

                <Button Name="CommandListBt" Style="{StaticResource CommandListBt}" Margin="4,0,0,0" Content="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_ShowCommandListBT, Mode=OneWay}" Command="{Binding OpenCommandListCommand}" IsEnabled="False" Visibility="Hidden" />
                <Border Width="1" Margin="3,2,0,0" BorderBrush="{StaticResource BorderWhiteColor}" BorderThickness="1" Visibility="Hidden" />
            </StackPanel>

            <Grid Margin="0,85,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>
                <Grid Margin="9,0,9,5" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="223"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="230"/>
                    </Grid.ColumnDefinitions>
                    <Grid HorizontalAlignment="Stretch" Margin="0,0,5,0" Width="Auto" Grid.Column="0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Height="25">
                            <Button Name="PlayerListRefreshBt" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource ResourceKey=RefreshButton}"  Margin="0,0,0,0" Command="{Binding PlayerListRefreshCommand}" />
                        </StackPanel>
                        <Grid HorizontalAlignment="Stretch" Margin="0,30,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="179*" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="225*" />
                                <RowDefinition Height="27" />
                            </Grid.RowDefinitions>
                            <ListView Grid.Row="0" Height="Auto" Width="Auto" Name="UsersList" ItemsSource="{Binding UsersList.Value}" SelectedIndex="{Binding UsersListSelectedIndex}" Foreground="White" Background="Transparent" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible">
                                <ListView.View>
                                    <GridView>
                                        <!-- 1. id=171, Aona Suzutsuki, pos=(-3125.2, 171.1, 2675.3), rot=(0.0, 0.0, 0.0), remote=True, health=74, deaths=7, zombies=132, players=0, score=98, level=14, steamid=76561198010715714, ip=192.168.1.45, ping=0 -->
                                        <GridViewColumn Width="40" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_IDLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=Id}" />
                                        <GridViewColumn Width="50" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_LevelLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=Level}" />
                                        <GridViewColumn Width="150" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_NameLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=Name}" />
                                        <GridViewColumn Width="40" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_HealthLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=Health}" />
                                        <GridViewColumn Width="65" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_ZombieKillsLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=ZombieKills}" />
                                        <GridViewColumn Width="85" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_PlayerKillsLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=PlayerKills}" />
                                        <GridViewColumn Width="40" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_DeathLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=Death}" />
                                        <GridViewColumn Width="40" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_ScoreLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=Score}" />
                                        <GridViewColumn Width="150" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_Coord, Mode=OneWay}" DisplayMemberBinding="{Binding Path=Coord}" />
                                        <GridViewColumn Width="100" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_SteamIDLabel, Mode=OneWay}" DisplayMemberBinding="{Binding Path=SteamId}" />
                                    </GridView>
                                </ListView.View>
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Opened">
                                                <i:InvokeCommandAction Command="{Binding PlayerContextMenuOpened}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                        <MenuItem Header="Admin" IsEnabled="{Binding AdminContextEnabled}">
                                            <MenuItem Header="Add" Name="AdminAddBt" Command="{Binding AddAdminCommand}" />
                                            <MenuItem Header="Remove" Name="AdminRemoveBt" Command="{Binding RemoveAdminCommand}" />
                                        </MenuItem>
                                        <MenuItem Header="Whitelist" IsEnabled="{Binding WhitelistContextEnabled}">
                                            <MenuItem Header="Add" Name="WhiteListAddBt" Command="{Binding AddWhiteListCommand}" />
                                            <MenuItem Header="Remove" Name="WhiteListRemoveBt" Command="{Binding RemoveWhiteListCommand}" />
                                        </MenuItem>
                                        <MenuItem Header="Kick" Name="KickBt" IsEnabled="{Binding KickContextEnabled}" Command="{Binding KickPlayerCommand}" />
                                        <MenuItem Header="Ban" Name="BanBt" IsEnabled="{Binding BanContextEnabled}" Command="{Binding BanPlayerCommand}" />
                                        <MenuItem Header="Kill" Name="KillBt" IsEnabled="False" Command="{Binding KillPlayerCommand}" />
                                        <Separator Style="{StaticResource MLB_Separator}" />
                                        <MenuItem Header="Watch Player Info" Name="WatchPlayerInfoBt" IsEnabled="{Binding WatchPlayerInfoContextEnabled}" Command="{Binding ShowPlayerInfoCommand}" />
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                            <GridSplitter Background="Transparent" Grid.Row="1" Margin="0,0,0,0" HorizontalAlignment="Stretch" Height="Auto"/>

                            <TextBox Name="ChatLogText" Text="{Binding ChatLogText.Value}" Grid.Row="2" Margin="0,1,0,0" AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Height="Auto"  VerticalAlignment="Stretch" ContextMenu="{StaticResource CopyOnly}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:InvokeCommandAction  Command="{Binding ChatLogMouseEnterCommand}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction  Command="{Binding ChatLogMouseLeaveCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>

                            <TextBox Name="ChatTextBox" Text="{Binding ChatInputText.Value, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Margin="0,1,0,0" AcceptsReturn="False" TextWrapping="NoWrap" VerticalScrollBarVisibility="Hidden" IsReadOnly="False" Height="25"  VerticalAlignment="Stretch" ContextMenu="{StaticResource CopyCutPaste}">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding ChatTextBoxEnterDown}" CommandParameter="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                                </TextBox.InputBindings>
                            </TextBox>
                        </Grid>
                    </Grid>

                    <GridSplitter Grid.Column="0" Background="Transparent" VerticalAlignment="Stretch" Width="5" Margin="0,0,0,0"/>

                    <Grid Grid.Column="1" Name="CenterPanel" HorizontalAlignment="Stretch" Margin="0,0,2,0">
                        <Grid Margin="0,0,0,26">
                            <TextBox Text="{Binding ConsoleLogText, Mode=OneWay}" Name="ConsoleTextBox" AcceptsReturn="True" TextWrapping="{Binding IsConsoleLogTextWrapping.Value, Converter={converter:TextWrappingConverter}}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" IsReadOnly="True" Height="Auto"  VerticalAlignment="Stretch">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:InvokeCommandAction  Command="{Binding ConsoleTextBoxMouseEnter}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction  Command="{Binding ConsoleTextBoxMouseLeave}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="ApplicationCommands.Copy" />
                                        <Separator Style="{StaticResource MLB_Separator}" />
                                        <MenuItem Name="DeleteLogBt" Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_DeleteLogBTLabel, Mode=OneWay}" Command="{Binding DeleteLogCommand}" />
                                        <Separator Style="{StaticResource MLB_Separator}" />
                                        <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_TextWrapping, Mode=OneWay}" IsCheckable="True" IsChecked="{Binding IsConsoleLogTextWrapping.Value}" />
                                    </ContextMenu>
                                </TextBox.ContextMenu>
                            </TextBox>
                        </Grid>
                        <DockPanel VerticalAlignment="Bottom">
                            <!--<Popup Name="popup" IsOpen="False" StaysOpen="False">
                                <ListBox Name="listBoxTarget" IsTextSearchEnabled="True">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="KeyDown">
                                            <CommonViews:InvokeDelegateCommandAction  Command="{Binding listBoxTargetKeyDown}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBox>
                            </Popup>-->
                            <TextBox Name="CmdTextBox" Text="{Binding CmdText, UpdateSourceTrigger=PropertyChanged}" Height="25" ContextMenu="{StaticResource CopyCutPaste}">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding CmdTextBoxEnterDown}" CommandParameter="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                                    <KeyBinding Key="Up" Command="{Binding SetCmdHistoryCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                                    <KeyBinding Key="Down" Command="{Binding SetCmdHistoryCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" />
                                </TextBox.InputBindings>
                            </TextBox>
                        </DockPanel>
                    </Grid>
                    <Grid Grid.Column="2" Name="RightPanel" HorizontalAlignment="Right" Margin="0,0,0,0" Width="230">
                        <TabControl Name="SettingTab" Background="Transparent" BorderThickness="1" BorderBrush="#FFE7E7E7">
                            <TabItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_ServerLabel, Mode=OneWay}">
                                <Grid Style="{StaticResource TabGrid}">

                                    <TabControl Margin="2">
                                        <TabItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_TelnetLabel, Mode=OneWay}">
                                            <Grid Margin="5">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="20" />
                                                    <RowDefinition Height="135" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <CheckBox Grid.Row="0" Foreground="White" IsEnabled="{Binding LocalModeEnabled.Value}" IsChecked="{Binding LocalModeChecked.Value}" Content="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_LocalServerModeLabel, Mode=OneWay}" />
                                                <Grid Grid.Row="1">
                                                    <Border Style="{StaticResource GridBorder}" />
                                                    <StackPanel IsEnabled="{Binding ConnectionPanelIsEnabled.Value}" Margin="5">
                                                        <Label Content="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_AddressLabel, Mode=OneWay}" Padding="0" Margin="0,0,0,0" FontSize="11" Foreground="White" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                                        <TextBox Text="{Binding TelnetAddressText.Value}" VerticalAlignment="Top" Height="22" ContextMenu="{StaticResource CopyCutPaste}" />
                                                        <Label Content="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_PortLabel, Mode=OneWay}" Padding="0" Margin="0,0,0,0" FontSize="11" Foreground="White" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                                        <TextBox Text="{Binding TelnetPortText.Value}" VerticalAlignment="Top" Height="22" ContextMenu="{StaticResource CopyCutPaste}">
                                                            <!--NumText:TextBoxBehaviors.IsNumeric="True"-->
                                                            <i:Interaction.Behaviors>
                                                                <behaviors:NumTextBehavior />
                                                            </i:Interaction.Behaviors>
                                                        </TextBox>
                                                        <Label Content="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_PasswordLabel, Mode=OneWay}" Padding="0" Margin="0,0,0,0" FontSize="11" Foreground="White" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                                        <TextBox Text="{Binding TelnetPasswordText.Value}" VerticalAlignment="Top" Height="22" ContextMenu="{StaticResource CopyCutPaste}" Style="{StaticResource PasswordStyle}" />
                                                    </StackPanel>
                                                </Grid>

                                                <Grid Grid.Row="2">
                                                    <StackPanel>
                                                        <Label Content="Calculate Telnet Wait Time" />
                                                        <Button Content="Open Calculator" Style="{StaticResource FlatButton}" Command="{Binding OpenTelnetWaitTimeCalculatorCommand}" />
                                                    </StackPanel>
                                                </Grid>
                                            </Grid>
                                        </TabItem>

                                        <TabItem Header="SSH" IsEnabled="{Binding IsBeta.Value}">
                                            <StackPanel>

                                                <Grid>
                                                    <userControls:SshControl
                                                        SshAddress="{Binding SshAddressText.Value}"
                                                        SshPort="{Binding SshPortText.Value}"
                                                        SshUserName="{Binding SshUserNameText.Value}"
                                                        SshPassword="{Binding SshPasswordText.Value}"
                                                        SshExeFileDirectory="{Binding SshExeFileDirectoryText.Value}"
                                                        SshConfigFileName="{Binding SshConfigFileNameText.Value}"
                                                        SshAuthMode="{Binding SshAuthMode.Value}"
                                                        SshKeyPath="{Binding SshKeyPathText.Value}"
                                                        SshPassPhrase="{Binding SshPassPhraseText.Value}"
                                                        />
                                                </Grid>
                                            </StackPanel>
                                        </TabItem>

                                        <TabItem Header="IP">
                                            <Grid Margin="5">
                                                <StackPanel>
                                                    <Label Content="IP Address Checker" />
                                                    <Button Content="Open" Height="25" Style="{StaticResource FlatButton}" Command="{Binding OpenGetIpCommand}" />

                                                    <Label Content="Port Checker" />
                                                    <Button Content="Open" Height="25" Style="{StaticResource FlatButton}" Command="{Binding CheckPortCommand}" />
                                                </StackPanel>
                                            </Grid>
                                        </TabItem>
                                    </TabControl>

                                </Grid>
                            </TabItem>
                            <TabItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_CommandLabel, Mode=OneWay}">
                                <Grid Style="{StaticResource TabGrid}">

                                    <TabControl SelectedIndex="0">
                                        <TabItem Header="General">
                                            <Grid Style="{StaticResource TabGrid}">
                                                <Grid Margin="5" VerticalAlignment="Top">
                                                    <Label HorizontalAlignment="Left" Width="40" Content="Time" />
                                                    <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="40,0,0,0">
                                                        <Label Content="Day" />
                                                        <TextBox Text="{Binding TimeDayText.Value}" Width="50" Margin="0,0,10,0" VerticalContentAlignment="Center">
                                                            <i:Interaction.Behaviors>
                                                                <behaviors:NumTextBehavior />
                                                            </i:Interaction.Behaviors>
                                                        </TextBox>
                                                        <TextBox Text="{Binding TimeHourText.Value}" Width="30" VerticalContentAlignment="Center">
                                                            <i:Interaction.Behaviors>
                                                                <behaviors:NumTextBehavior Max="23" />
                                                            </i:Interaction.Behaviors>
                                                        </TextBox>
                                                        <Label Content=":" />
                                                        <TextBox Text="{Binding TimeMinuteText.Value}" Width="30" VerticalContentAlignment="Center">
                                                            <i:Interaction.Behaviors>
                                                                <behaviors:NumTextBehavior Max="59" />
                                                            </i:Interaction.Behaviors>
                                                        </TextBox>
                                                    </StackPanel>
                                                </Grid>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,40,0,0">
                                                    <Button Name="GetTimeBt"  Content="Get Time" Foreground="#81D1FF" BorderBrush="#81D1FF" Style="{StaticResource FlatButton}" Height="25" Width="70" Command="{Binding GetTimeCommand}" />
                                                    <Button Name="SetTimeBt" Content="Set Time" Foreground="#FF8080" BorderBrush="#FF8080" Style="{StaticResource FlatButton}" Height="25" Width="70" Margin="10,0,0,0" Command="{Binding SetTimeCommand}" />
                                                </StackPanel>
                                                <Grid Margin="5,82,5,0" VerticalAlignment="Top">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>
                                                    <Label Grid.Column="0" HorizontalAlignment="Left" Content="Save World" />
                                                    <Button Name="SaveWorldBt" Grid.Column="1" Content="Save World" Style="{StaticResource FlatButton}" Command="{Binding SaveWorldCommand}" />
                                                </Grid>
                                            </Grid>
                                        </TabItem>
                                    </TabControl>

                                </Grid>
                            </TabItem>
                            <TabItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_ConfigLabel, Mode=OneWay}">
                                <Grid Style="{StaticResource TabGrid}">
                                    <StackPanel>
                                        <Label Content="Permissions" />
                                        <Button Content="Open Editor" Style="{StaticResource FlatButton}" Command="{Binding OpenPermissionEditorCommand}" />
                                    </StackPanel>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </Grid>
                <Grid Name="BottomNewsGrid" Background="{Binding AroundBorderColor.Value}" Grid.Row="1">
                    <Label Content="{Binding BottomNewsLabel.Value}" Padding="0" Margin="10,0,0,0" FontSize="11" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" />
                    <Label Content="{Binding BottomDebugLabel.Value}" Padding="0" Margin="10,0,0,0" FontSize="11" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Right" />
                </Grid>
            </Grid>

        </Grid>

    </Grid>
</Window>
