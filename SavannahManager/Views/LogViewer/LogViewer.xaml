<Window x:Class="_7dtd_svmanager_fix_mvvm.Views.LogViewer.LogViewer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:update="clr-namespace:_7dtd_svmanager_fix_mvvm.Views.Update"
        xmlns:commonViews="clr-namespace:CommonStyleLib.Views;assembly=CommonStyleLib"
        xmlns:viewModels="clr-namespace:_7dtd_svmanager_fix_mvvm.ViewModels.LogViewer"
        xmlns:local="clr-namespace:_7dtd_svmanager_fix_mvvm.Views.LogViewer"
        xmlns:app="clr-namespace:_7dtd_svmanager_fix_mvvm.LangResources"
        xmlns:converter="clr-namespace:_7dtd_svmanager_fix_mvvm.Views.Converter"
        xmlns:userControls="clr-namespace:_7dtd_svmanager_fix_mvvm.Views.UserControls"
        xmlns:behaviors="clr-namespace:SavannahManagerStyleLib.Views.Behaviors;assembly=SavannahManagerStyleLib"
        mc:Ignorable="d"
        Title="Log Viewer" Height="450" Width="800"
        d:DataContext="{d:DesignInstance viewModels:LogViewerViewModel}"
        BorderBrush="{Binding AroundBorderColor.Value}"
        Opacity="{Binding AroundBorderOpacity.Value}"
        Style="{DynamicResource WindowStyle}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Activated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Deactivated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding StateChanged}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <commonViews:InvokeDelegateCommandAction Command="{Binding KeyDown}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/Window.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/ListBoxStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
                <ResourceDictionary>

                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Constants.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <Style TargetType="{x:Type userControls:BindableRichTextBox}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type userControls:BindableRichTextBox}">
                                    <Border Name="Border" BorderBrush="{StaticResource BorderColor}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                                        <ScrollViewer x:Name="PART_ContentHost" Margin="0,0,0,0" Focusable="false" Style="{StaticResource ListBoxScrollKey}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{StaticResource BackgroundGrid}" Margin="{Binding MainWindowMargin}">

        <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                        HorizontalAlignment="left"
                        VerticalAlignment="Top">
            <Image Source="{StaticResource Icon}" Width="15" Height="15" Stretch="Uniform" WindowChrome.IsHitTestVisibleInChrome="True">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <commonViews:InteractiveCommand Command="{Binding ImageMouseDown}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
            <Label Content="Log Viewer" Style="{StaticResource ResourceKey=StatTitle}" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
            <Button Name="MainWindowMinimumBt" Content="{Binding MainWindowMinimumBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowMinimumBtClick}" />
            <Button Name="MainMaximumBt" Content="{Binding MainWindowMaximumBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowMaximumBtClick}" />
            <Button Name="MainWindowCloseBt" Content="{Binding MainWindowCloseBtContent}" Style="{StaticResource CaptionButtonStyleKey}" Command="{Binding MainWindowCloseBtClick}" />
        </StackPanel>

        <StackPanel Margin="1,25,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <Menu IsMainMenu="True" Name="Menu" Height="25" Padding="3" VerticalAlignment="Top">
                <MenuItem Header="File(_F)">
                    <MenuItem Header="Exit(_X)" Command="{Binding MainWindowCloseBtClick}" />
                </MenuItem>
                <MenuItem Header="Tools(_T)">
                    <MenuItem Header="Export Player" />
                    <MenuItem Header="Export Chat" />
                </MenuItem>
            </Menu>
        </StackPanel>

        <Grid Margin="5, 50, 5, 5">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid HorizontalAlignment="Stretch" Margin="0,0,5,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="5" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <ListBox Grid.Row="2" ItemsSource="{Binding LogFileList}" Background="Transparent" Foreground="White" ItemContainerStyle="{StaticResource CustomListBoxItem}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type viewModels:LogFileItem}">
                            <Grid Height="25">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="0" />
                                    <ColumnDefinition Width="70" />
                                </Grid.ColumnDefinitions>

                                <Grid>
                                    <TextBlock VerticalAlignment="Center">
                                        <Run Text="{Binding Title}" />
                                    </TextBlock>
                                </Grid>

                                <TextBlock Grid.Column="2" VerticalAlignment="Center">
                                    <Run Text="{Binding FileSizeText}" />
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding LogFileListSelectionChangedCommand}" CommandParameter="{Binding SelectedIndex, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>

            <GridSplitter Grid.Column="0" Width="5" Margin="0" Background="Transparent" VerticalAlignment="Stretch" />

            <Grid Grid.Column="1">
                <Grid>
                    
                    <TabControl>
                        <TabItem Header="Log">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="0" />
                                    <RowDefinition />
                                    <RowDefinition Height="5" />
                                    <RowDefinition Height="30" />
                                </Grid.RowDefinitions>

                                <StackPanel VerticalAlignment="Center" Height="25" Orientation="Horizontal" Grid.Row="0">
                                    <Label Content="Filter" />
                                    <TextBox Text="{Binding FilterText.Value}" Width="300" VerticalContentAlignment="Center" />
                                    <Button Content="Apply" Width="50" Margin="5,0,0,0" Style="{StaticResource FlatButton}" Command="{Binding ApplyFilterCommand}"/>
                                </StackPanel>

                                <userControls:BindableRichTextBox Grid.Row="2" x:Name="LogTextBox" Background="Transparent" Foreground="White" VerticalScrollBarVisibility="Visible" IsLazyLoad="True" BindingDocument="{Binding RichLogDetailItems.Value, Converter={converter:RichTextItemsToDocumentConverter}}" WordWrapping="{Binding IsWordWrapping.Value}" IsReadOnly="True" TextChangedCommand="{Binding TextChangedCommand}" ScrollEndedCommand="{Binding ScrollEndedCommand}">
                                    <userControls:BindableRichTextBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="ApplicationCommands.Copy" />
                                            <Separator Style="{StaticResource MLB_Separator}" />
                                            <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_TextWrapping, Mode=OneWay}" IsCheckable="True" IsChecked="{Binding IsWordWrapping.Value}" />
                                        </ContextMenu>
                                    </userControls:BindableRichTextBox.ContextMenu>
                                </userControls:BindableRichTextBox>

                                <Grid Grid.Row="4">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Line:" />
                                        <Label Content="{Binding LoadedLineLabel.Value}" />
                                        <Label Content="Loaded" />
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </TabItem>

                        <TabItem Header="Player">
                            <ListView ItemsSource="{Binding PlayerItems.Value}" Height="Auto" Width="Auto" Foreground="White" Background="Transparent" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible">
                                <i:Interaction.Behaviors>
                                    <behaviors:SortableListViewBehavior FirstSort="Date" />
                                </i:Interaction.Behaviors>

                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="140" DisplayMemberBinding="{Binding Date}">
                                            <GridViewColumnHeader Tag="Date" Content="Date" />
                                        </GridViewColumn>
                                        <GridViewColumn Width="50" DisplayMemberBinding="{Binding InOut}">
                                            <GridViewColumnHeader Tag="InOut" Content="In/Out" />
                                        </GridViewColumn>
                                        <GridViewColumn Width="140" DisplayMemberBinding="{Binding Name}">
                                            <GridViewColumnHeader Tag="Name" Content="Name" />
                                        </GridViewColumn>
                                        <GridViewColumn Width="50" DisplayMemberBinding="{Binding Id}">
                                            <GridViewColumnHeader Tag="Id" Content="Id" />
                                        </GridViewColumn>
                                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding SteamId}">
                                            <GridViewColumnHeader Tag="SteamId" Content="Steam Id" />
                                        </GridViewColumn>
                                        <GridViewColumn Width="140" DisplayMemberBinding="{Binding IpAddress}">
                                            <GridViewColumnHeader Tag="IpAddress" Content="IP Id" />
                                        </GridViewColumn>
                                        <GridViewColumn Width="140" DisplayMemberBinding="{Binding Position}">
                                            <GridViewColumnHeader Tag="Position" Content="Position" />
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>

                        <TabItem Header="Chat">
                            <ListView ItemsSource="{Binding ChatItems.Value}" Height="Auto" Width="Auto" Foreground="White" Background="Transparent" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="140" Header="Date" DisplayMemberBinding="{Binding Path=Date}" />
                                        <GridViewColumn Width="100" Header="Name" DisplayMemberBinding="{Binding Path=Name}" />
                                        <GridViewColumn Width="300" Header="Body" DisplayMemberBinding="{Binding Path=Message}" />
                                        <GridViewColumn Width="50" Header="Id" DisplayMemberBinding="{Binding Path=Id}" />
                                        <GridViewColumn Width="100" Header="Steam Id" DisplayMemberBinding="{Binding Path=SteamId}" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TabItem>
                    </TabControl>

                    <Grid Height="30" Margin="20, 0" Background="#222" Visibility="{Binding ProgressBarVisibility.Value, Converter={converter:BooleanVisibilityConverter}, FallbackValue=Hidden}">
                        <ProgressBar Value="100" Style="{StaticResource IndeterminateProgressBar}" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

    </Grid>
</Window>
