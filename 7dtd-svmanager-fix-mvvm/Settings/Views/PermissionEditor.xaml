<Window x:Class="_7dtd_svmanager_fix_mvvm.Settings.Views.PermissionEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:app="clr-namespace:LanguageEx"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:CommonViews="clr-namespace:CommonStyleLib.Views;assembly=CommonStyleLib"
        xmlns:local="clr-namespace:_7dtd_svmanager_fix_mvvm.Settings.Views"
        xmlns:models="clr-namespace:_7dtd_svmanager_fix_mvvm.Settings.Models"
        mc:Ignorable="d"
        Title="Permission Editor" Height="450" Width="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Activated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Deactivated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding StateChanged}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <CommonViews:InvokeDelegateCommandAction Command="{Binding KeyDown}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
                <ResourceDictionary>
                    <Style x:Key="ItemInListView" TargetType="ListViewItem">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontFamily" Value="{StaticResource FontName}" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                                        <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="3" Content="{TemplateBinding Content}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#4090ff" />
                            </MultiTrigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                <Setter Property="IsSelected" Value="true" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#333"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="TextBoxInListView" TargetType="TextBox">
                        <Setter Property="Foreground" Value="white" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                    <Border Name="TextBoxBorder" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" BorderThickness="1" BorderBrush="Transparent">
                                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="LightGray" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{DynamicResource ResourceKey=BackgroundGrid}">
        <Border Name="AroundBorder" BorderBrush="{Binding AroundBorderColor.Value}" Opacity="{Binding AroundBorderOpacity.Value}" BorderThickness="1" />

        <Grid Margin="{Binding MainWindowMargin}">

            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                        HorizontalAlignment="left"
                        VerticalAlignment="Top">
                <Image Source="{StaticResource Icon}" Width="15" Height="15" Stretch="Uniform" WindowChrome.IsHitTestVisibleInChrome="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <CommonViews:InteractiveCommand Command="{Binding ImageMouseDown}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Label Content="Permission Editor" Style="{DynamicResource ResourceKey=StatTitle}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                <Button Name="MainWindowMinimumBt" Content="{Binding MainWindowMinimumBtContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowMinimumBtClick}" />
                <Button Name="MainMaximumBt" Content="{Binding MainWindowMaximumBtContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowMaximumBtClick}" />
                <Button Name="MainWindowCloseBt" Content="{Binding MainWindowCloseBtContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowCloseBtClick}" />
            </StackPanel>
            <StackPanel Margin="1,25,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Menu IsMainMenu="True" Name="Menu" Height="25" Padding="3" VerticalAlignment="Top">
                    <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_FileBT, Mode=OneWay}">
                        <MenuItem Header="{Binding Source={x:Static app:ResourceService.Current}, Path=Resources.UI_ExitBT, Mode=OneWay}" Command="{Binding MainWindowCloseBtClick}" />
                    </MenuItem>
                </Menu>
            </StackPanel>

            <Grid Margin="10,55,10,0">
                <TabControl>
                    <TabItem Header="Command">
                        <ListView ItemsSource="{Binding CommandPermissions}" IsEnabled="{Binding IsAttributesEnabled.Value}" ItemContainerStyle="{StaticResource ItemInListView}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="200" Header="Name">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="models:PermissionInfo">
                                                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"  Style="{StaticResource TextBoxInListView}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="LostFocus">
                                                            <i:InvokeCommandAction Command="{Binding AttributeNameLostFocus}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="TextChanged">
                                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </TextBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="100" Header="Value">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="models:PermissionInfo">
                                                <TextBox Text="{Binding Permission, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{StaticResource TextBoxInListView}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="LostFocus">
                                                            <i:InvokeCommandAction Command="{Binding AttributeNameLostFocus}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="TextChanged">
                                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </TextBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>

                    <TabItem Header="Admin">
                        <ListView ItemsSource="{Binding AdminPermissions}" IsEnabled="{Binding IsAttributesEnabled.Value}" ItemContainerStyle="{StaticResource ItemInListView}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="200" Header="Name">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="models:PermissionInfo">
                                                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"  Style="{StaticResource TextBoxInListView}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="LostFocus">
                                                            <i:InvokeCommandAction Command="{Binding AttributeNameLostFocus}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="TextChanged">
                                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </TextBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="100" Header="Value">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate DataType="models:PermissionInfo">
                                                <TextBox Text="{Binding Permission, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Style="{StaticResource TextBoxInListView}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="LostFocus">
                                                            <i:InvokeCommandAction Command="{Binding AttributeNameLostFocus}" />
                                                        </i:EventTrigger>
                                                        <i:EventTrigger EventName="TextChanged">
                                                            <i:InvokeCommandAction Command="{Binding TextChangedCommand}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </TextBox>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>

                    <TabItem Header="Whitelist">

                    </TabItem>

                    <TabItem Header="Blacklist">

                    </TabItem>
                </TabControl>
            </Grid>

        </Grid>
    </Grid>
</Window>
