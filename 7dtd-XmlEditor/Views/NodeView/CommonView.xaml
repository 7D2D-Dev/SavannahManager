<Page x:Class="_7dtd_XmlEditor.Views.NodeView.CommonView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:local="clr-namespace:_7dtd_XmlEditor.Views.NodeView"
      xmlns:views="clr-namespace:_7dtd_XmlEditor.Views"
      xmlns:treeView="clr-namespace:_7dtd_XmlEditor.Models.TreeView"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="CommonView">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
                <ResourceDictionary Source="/Styles/TreeViewStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".5*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <views:BindableSelectedItemTreeView ItemsSource="{Binding TreeViewItems}" BindableSelectedItem="{Binding TreeViewSelectedItem.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IgnoreNullSelectedItem="False" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseRightButtonDown">
                    <i:InvokeCommandAction Command="{Binding TreeViewMouseRightButtonDown}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction  Command="{Binding TreeViewSelectedItemChanged}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            

            <views:BindableSelectedItemTreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="treeView:TreeViewItemInfo" ItemsSource="{Binding Children}">
                    <TextBlock Text="{Binding Name}" />
                </HierarchicalDataTemplate>
            </views:BindableSelectedItemTreeView.ItemTemplate>

            <views:BindableSelectedItemTreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <!--<Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />-->
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded,Mode=TwoWay}"/>
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </views:BindableSelectedItemTreeView.ItemContainerStyle>

            <views:BindableSelectedItemTreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="AAA" />
                </ContextMenu>
            </views:BindableSelectedItemTreeView.ContextMenu>
        </views:BindableSelectedItemTreeView>

        <GridSplitter Grid.Column="1" HorizontalAlignment="Center" Background="Transparent" Width="5" Margin="0,0,0,0"/>
        
        <Grid Grid.Column="2">

            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="5" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Button Content="Apply" Style="{DynamicResource FlatButton}" Command="{Binding ApplyBtClicked}" />

            <Label Grid.Row="1" Content="{Binding FullPath.Value}" />

            <Grid Grid.Row="2">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <StackPanel HorizontalAlignment="Left">
                    <Button Content="+" Width="25" Height="25" Style="{DynamicResource FlatButton}" Command="{Binding AddAttributeBtClicked}" />
                    <Button Content="-" Width="25" Height="25" Margin="0,5,0,0" Style="{DynamicResource FlatButton}" Command="{Binding RemoveAttributeBtClicked}" />
                </StackPanel>

                <ListView Grid.Column="1" ItemsSource="{Binding Attributes}">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding AttributesSelectionChanged}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <ListView.View>
                        <GridView>
                            <GridViewColumn Width="150" Header="Name">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Attribute.Name}" TextWrapping="Wrap">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="LostFocus">
                                                    <i:InvokeCommandAction Command="{Binding AttributeNameLostFocus}" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="TextChanged">
                                                    <i:InvokeCommandAction Command="{Binding AttributeNameTextChanged}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="300" Header="Value">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Attribute.Value}" TextWrapping="Wrap">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="LostFocus">
                                                    <i:InvokeCommandAction Command="{Binding AttributeNameLostFocus}" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="TextChanged">
                                                    <i:InvokeCommandAction Command="{Binding AttributeNameTextChanged}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>

                    <ListView.Resources>
                        <Style x:Key="{x:Type TextBox}" TargetType="TextBox">
                            <Setter Property="Foreground" Value="white" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                        <Border Name="TextBoxBorder" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" BorderThickness="1" BorderBrush="Transparent">
                                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="LightGray" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontFamily" Value="{StaticResource FontName}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="3" Content="{TemplateBinding Content}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#4090ff" />
                                </MultiTrigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                    <Setter Property="IsSelected" Value="true" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#333"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>

            <GridSplitter Background="Transparent" Grid.Row="3" Margin="0,0,0,0" HorizontalAlignment="Stretch" Height="Auto"/>

            <TextBox Grid.Row="4" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding InnerXml.Value, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding InnerXmlTextChanged}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Grid>

    </Grid>
</Page>
