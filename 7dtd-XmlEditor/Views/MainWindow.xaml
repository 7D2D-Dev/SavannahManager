<Window x:Class="_7dtd_XmlEditor.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:local="clr-namespace:_7dtd_XmlEditor"
        xmlns:CommonViews="clr-namespace:CommonStyleLib.Views;assembly=CommonStyleLib"
        xmlns:treeView="clr-namespace:_7dtd_XmlEditor.Models.TreeView"
        xmlns:views="clr-namespace:_7dtd_XmlEditor.Views"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
                <ResourceDictionary Source="/Styles/TreeViewStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{DynamicResource ResourceKey=BackgroundGrid}">
        <Border Name="AroundBorder" BorderBrush="{Binding AroundBorderColor.Value}" Opacity="{Binding AroundBorderOpacity.Value}" BorderThickness="1" />

        <Grid Margin="{Binding MainWindowMargin}">

            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                        HorizontalAlignment="left"
                        VerticalAlignment="Top">
                <Image Source="{StaticResource Icon}" Width="15" Height="15" Stretch="Uniform" WindowChrome.IsHitTestVisibleInChrome="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <CommonViews:InteractiveCommand Command="{Binding ImageMouseDown}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Label Content="Savannah Manager" Style="{DynamicResource ResourceKey=StatTitle}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                <Button Name="MainWindowMinimumBT" Content="{Binding MainWindowMinimumBTContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowMinimumBTClick}" />
                <Button Name="MainMaximumBT" Content="{Binding MainWindowMaximumBTContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowMaximumBTClick}" />
                <Button Name="MainWindowCloseBT" Content="{Binding MainWindowCloseBTContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowCloseBTClick}" />
            </StackPanel>
            <StackPanel Margin="1,25,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Menu IsMainMenu="True" Name="Menu" Height="25" Padding="3" VerticalAlignment="Top">
                    <MenuItem Header="File(_F)">
                        <MenuItem Header="Exit(_X)" Name="MenuExitBT" Command="{Binding MainWindowCloseBTClick}" />
                    </MenuItem>
                </Menu>
            </StackPanel>

            <Grid Margin="10,55,10,10">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".5*" />
                    <ColumnDefinition  Width="5"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <views:BindableSelectedItemTreeView ItemsSource="{Binding TreeViewItems}" BindableSelectedItem="{Binding TreeViewSelectedItem.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseRightButtonDown">
                            <i:InvokeCommandAction Command="{Binding TreeViewMouseRightButtonDown}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction  Command="{Binding TreeViewSelectedItemChanged}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <views:BindableSelectedItemTreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="treeView:TreeViewItemInfo" ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Name}" />
                        </HierarchicalDataTemplate>
                    </views:BindableSelectedItemTreeView.ItemTemplate>

                    <views:BindableSelectedItemTreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <!--<Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />-->
                            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded,Mode=TwoWay}"/>
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="Gray" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </views:BindableSelectedItemTreeView.ItemContainerStyle>

                    <views:BindableSelectedItemTreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="AAA" />
                        </ContextMenu>
                    </views:BindableSelectedItemTreeView.ContextMenu>
                </views:BindableSelectedItemTreeView>

                <GridSplitter Grid.Column="1" HorizontalAlignment="Center" Background="Transparent" Width="5" Margin="0,0,0,0"/>

                <Grid Grid.Column="2">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <ComboBox Width="200" HorizontalAlignment="Left" ItemsSource="{Binding EditModeComboItems}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding EditModeComboSelectionChanged}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}, Path=SelectedItem}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>

                        <Button Content="Apply" Style="{DynamicResource FlatButton}" Command="{Binding ApplyBtClicked}" />
                    </StackPanel>

                    <Frame Grid.Row="1" Name="MainFrame"
                           NavigationUIVisibility="Hidden" />

                </Grid>
                
            </Grid>
        </Grid>
    </Grid>
</Window>
